name: DB Exists
description: "Determines whether a database exists."
inputs:
  environment:
    description: 'The environment to deploy in.'
    required: true
  staging-subdomain:
    description: 'The subdomain to use for staging deploys.'
    required: true
    default: staging
  aws-access-key-id:
    description: 'The AWS access key ID to use.'
    required: true
  aws-secret-access-key:
    description: 'The AWS secret access key to use.'
    required: true
outputs:
  exists:
    description: 'Whether the database exists.'
    value: ${{ steps.db-exists.outputs.db-exists }}

runs:
  using: composite
  steps:
    - uses: ./.github/actions/setup-terragrunt
      with:
        environment: ${{ inputs.environment }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        staging-subdomain: ${{ inputs.staging-subdomain }}
    - name: Determine whether the DB exists
      id: db-exists
      shell: bash
      run: |
        if [[ -z "${DB_PASSWORD}" ]]; then
          echo "DB_PASSWORD is not set, so the DB does not exist"
          echo "::set-output name=db-exists::false"
        else
          echo "DB_PASSWORD is set, so the DB exists"
          echo "::set-output name=db-exists::true"
        fi
