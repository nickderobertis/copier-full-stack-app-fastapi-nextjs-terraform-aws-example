name: Deploy infrastructure
description: "Deploys infrastructure"
inputs:
  terragrunt-command:
    description: "The Terragrunt command to run such as apply, destroy, run-all apply, etc."
    required: true
    default: "run-all apply"
  environment:
    description: 'The environment to deploy in.'
    required: true
  subdir:
    description: "The subdirectory to run the terraform command in, relative to the environment folder"
    required: false
    default: .
  staging-subdomain:
    description: 'The subdomain to use for staging deploys.'
    required: true
    default: staging
  aws-access-key-id:
    description: 'The AWS access key ID to use.'
    required: true
  aws-secret-access-key:
    description: 'The AWS secret access key to use.'
    required: true

runs:
  using: composite
  steps:
    - uses: ./.github/actions/setup-terragrunt
      with:
        environment: ${{ inputs.environment }}
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        staging-subdomain: ${{ inputs.staging-subdomain }}
    - name: Run Terragrunt Commands
      shell: bash
      run: |
        environment_dir=$(realpath ./infra/${{ inputs.environment }})
        cd ./infra/${{ inputs.environment }}/${{ inputs.subdir }}
        terragrunt ${{ inputs.terragrunt-command }} --terragrunt-ignore-external-dependencies --terragrunt-non-interactive
        
        # Temporary workaround for https://github.com/hashicorp/terraform-provider-aws/issues/20651
        if (( "${{ inputs.terragrunt-command }}" == "apply" || "${{ inputs.terragrunt-command }}" == "run-all apply" )) && (( "${{ inputs.subdir }}" == "." || "${{ inputs.subdir }}" == "monitoring" )); then
          cd $environment_dir/monitoring
          terragrunt apply -auto-approve --terragrunt-ignore-external-dependencies --terragrunt-non-interactive
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        APP_STAGING_NAME_SUFFIX: ${{ inputs.staging-subdomain }}
        NETWORK_STAGING_SUBDOMAIN: ${{ inputs.staging-subdomain }}